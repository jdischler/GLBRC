/*
 * File: app/view/EvaluationTools.js
 * Date: Tue Dec 04 2012 09:59:26 GMT-0600 (CST)
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.EvaluationTools', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.evaluationtools',

    height: 300,
    width: 300,
    title: 'Evaluation Tools',
    titleAlign: 'center',
    activeTab: 0,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [{
								xtype: 'panel',
								title: 'Outcomes',
								layout: {
										type: 'absolute'
								},
								items: [{
										xtype: 'chart',
										data: 'data',
										x: 0,
										y: 0,
										height: 120,
										width: 180,
										insetPadding: 30,
										animate: true,
										store: 'store1',
										axes: [{
												position: 'gauge',
												title: 'A long title',
												type: 'Gauge',
												margin: 8,
												maximum: 100,
												minimum: 0,
												steps: 4
										}],
										series: [{
												type: 'gauge',
												angleField: 'data1',
												donut: 60,
												needle: false,
												highlight: {
														fill: '#ad2',
														"stroke-width": 1,
														stroke: '#228'
												},
												tips: {
														trackMouse: true,
														width: 90,
														height: 26,
														renderer: function(storeItem, item) {
																this.setTitle('Value: ' + storeItem.get('data1'));
														}
												}
										}]
								},
								{
										xtype: 'chart',
										data: 'data',
										x: 200,
										y: 0,
										height: 120,
										width: 180,
										insetPadding: 30,
										animate: true,
										store: 'store1',
										axes: [{
												position: 'gauge',
												title: 'Title',
												type: 'Gauge',
												margin: 8,
												maximum: 100,
												minimum: 0,
												steps: 4
										}],
										series: [{
												type: 'gauge',
												angleField: 'data2',
												donut: 60,
												needle: false,
												highlight: {
														fill: '#ad2',
														"stroke-width": 1,
														stroke: '#228'
												},
												tips: {
														trackMouse: true,
														width: 90,
														height: 26,
														renderer: function(storeItem, item) {
																this.setTitle('Value: ' + storeItem.get('data2'));
														}
												}
										}]
								},
								{
										xtype: 'chart',
										data: 'data',
										x: 0,
										y: 120,
										height: 120,
										width: 180,
										insetPadding: 30,
										animate: true,
										store: 'store1',
										axes: [{
												position: 'gauge',
												title: 'Title',
												type: 'Gauge',
												margin: 8,
												maximum: 100,
												minimum: 0,
												steps: 4
										}],
										series: [{
												type: 'gauge',
												angleField: 'data3',
												donut: 60,
												needle: false,
												highlight: {
														fill: '#ad2',
														"stroke-width": 1,
														stroke: '#228'
												},
												tips: {
														trackMouse: true,
														width: 90,
														height: 26,
														renderer: function(storeItem, item) {
																this.setTitle('Value: ' + storeItem.get('data3'));
														}
												}
										}]
								},
								{
										xtype: 'chart',
										data: 'data',
										x: 200,
										y: 120,
										height: 120,
										width: 180,
										insetPadding: 30,
										animate: true,
										store: 'store1',
										axes: [{
												position: 'gauge',
												title: 'Title',
												type: 'Gauge',
												margin: 8,
												maximum: 100,
												minimum: 0,
												steps: 4
										}],
										series: [{
												type: 'gauge',
												angleField: 'data4',
												donut: 60,
												needle: false,
												highlight: {
														fill: '#ad2',
														"stroke-width": 1,
														stroke: '#228'
												},
												tips: {
														trackMouse: true,
														width: 90,
														height: 26,
														renderer: function(storeItem, item) {
																this.setTitle('Value: ' + storeItem.get('data4'));
														}
												}
										}]
								}]
						},
						{
								xtype: 'panel',
								title: 'Assumptions'
						}]
        });

        me.callParent(arguments);
    }

});